name: Automatic Issue Labeler

on:
  issues:
    types: [opened, edited]

jobs:
  add-labels:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Read Labels JSON
      id: labels
      uses: actions/github-script@0.9.0
      with:
        script: |
          const fs = require('fs');
          const path = './.github/labels.json';
          const content = fs.readFileSync(path);
          const labels = JSON.parse(content);
          return labels;

    - name: Label the issue
      uses: actions/github-script@0.9.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const title = context.payload.issue.title;
          const issue_number = context.issue.number;
          const labelsToAdd = [];
          const fields = ${{ steps.labels.outputs.result }};

          // Etiketleri ayırt etmek için Regex kullanın
          const labelGroups = title.match(/\[([^\]]+)\]/g);
          labelGroups.forEach(group => {
            // Virgülle ayrılmış etiketleri alın ve boşlukları temizleyin
            const tags = group.match(/[^,\[\]]+/g).map(tag => tag.trim());
            // Her bir etiketi kontrol edin ve geçerli ise listeye ekleyin
            tags.forEach(tag => {
              for (const [field, validLabels] of Object.entries(fields)) {
                if (validLabels.includes(tag)) {
                  labelsToAdd.push(tag);
                }
              }
            });
          });

          // Eğer uygun etiketler varsa, issue'ya etiket ekle
          if (labelsToAdd.length > 0) {
            github.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              labels: labelsToAdd
            })
          }
